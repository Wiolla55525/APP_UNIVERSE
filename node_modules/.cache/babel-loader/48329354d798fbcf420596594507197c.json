{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\CodeAcademy\\\\Desktop\\\\My Projects\\\\cafe01-town-hall-new\\\\studentai\\\\violetaVinogrodska\\\\app-universe\\\\src\\\\Weather.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Weather(props) {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch(`/v1/places`).then(response => {\n      if (!response.ok) {\n        throw new Error(`This is an error: The status is ${response.status}`);\n      }\n      return response.json();\n    }).then(actualData => {\n      setData(actualData);\n      setError(null);\n    }).catch(err => {\n      setError(err.message);\n      setData(null);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n\n  //   airTemperature, forecastTimeUtc\n  async function getLocationWeather() {\n    const result = await fetch(`v1/places/${data.code}/forecasts/long-term`);\n    return result.json();\n  }\n  console.log(getLocationWeather('vilnius'));\n  const [weather, setWeather] = useState({\n    airTemperature: ''\n  });\n  async function location() {\n    const result = await fetch(`v1/places/vilnius/forecasts/long-term`);\n    return result;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" text-center p-2 m-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"p-3\",\n      children: \"Select city to check weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"A moment please...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: `There is a problem fetching the post data - ${error}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"city\",\n      onChange: e => e,\n      className: \"form-control text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), data && data.map(_ref => {\n        let {\n          code,\n          name\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          children: name\n        }, code, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 47\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), \".card\", /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"pt-4\",\n      children: [\"Temperature is \", weather, \" C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Weather, \"jrezzORSpZEu1B0XpnlNY9QlIr0=\");\n_c = Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","Weather","props","data","setData","loading","setLoading","error","setError","fetch","then","response","ok","Error","status","json","actualData","catch","err","message","finally","getLocationWeather","result","code","console","log","weather","setWeather","airTemperature","location","e","map","name"],"sources":["C:/users/CodeAcademy/Desktop/My Projects/cafe01-town-hall-new/studentai/violetaVinogrodska/app-universe/src/Weather.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nexport function Weather(props) {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(`/v1/places`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(`This is an error: The status is ${response.status}`);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((actualData) => {\r\n        setData(actualData);\r\n        setError(null);\r\n      })\r\n      .catch((err) => {\r\n        setError(err.message);\r\n        setData(null);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  //   airTemperature, forecastTimeUtc\r\n  async function getLocationWeather() {\r\n    const result = await fetch(`v1/places/${data.code}/forecasts/long-term`);\r\n    return result.json();\r\n  }\r\n  console.log(getLocationWeather('vilnius'));\r\n  \r\n  const [weather, setWeather] = useState({airTemperature: ''});\r\n\r\n  async function location() {\r\n    const result = await fetch(`v1/places/vilnius/forecasts/long-term`);\r\n    return result;\r\n  }\r\n\r\n  return (\r\n    <div className=\" text-center p-2 m-auto\">\r\n      {/* <h3>Weather:</h3>\r\n      <p>{weather}</p>\r\n      <button className=\"btn btn-dark\" onClick={() => setWeather()}>\r\n        Show current weather\r\n      </button> */}\r\n      <h3 className=\"p-3\">Select city to check weather</h3>\r\n      {loading && <div>A moment please...</div>}\r\n      {error && <div>{`There is a problem fetching the post data - ${error}`}</div>}\r\n\r\n      <select name=\"city\" onChange={(e) => e} className=\"form-control text-center\">\r\n        <option value=\"\">Select City</option>\r\n        {data && data.map(({ code, name }) => <option key={code}>{name}</option>)}\r\n      </select>\r\n     .card\r\n      <h4 className=\"pt-4\">Temperature is {weather} C</h4>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AAAC;AAElC,OAAO,SAASC,OAAO,CAACC,KAAK,EAAE;EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdS,KAAK,CAAE,YAAW,CAAC,CAChBC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,mCAAkCF,QAAQ,CAACG,MAAO,EAAC,CAAC;MACvE;MACA,OAAOH,QAAQ,CAACI,IAAI,EAAE;IACxB,CAAC,CAAC,CACDL,IAAI,CAAEM,UAAU,IAAK;MACpBZ,OAAO,CAACY,UAAU,CAAC;MACnBR,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,CACDS,KAAK,CAAEC,GAAG,IAAK;MACdV,QAAQ,CAACU,GAAG,CAACC,OAAO,CAAC;MACrBf,OAAO,CAAC,IAAI,CAAC;IACf,CAAC,CAAC,CACDgB,OAAO,CAAC,MAAM;MACbd,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,eAAee,kBAAkB,GAAG;IAClC,MAAMC,MAAM,GAAG,MAAMb,KAAK,CAAE,aAAYN,IAAI,CAACoB,IAAK,sBAAqB,CAAC;IACxE,OAAOD,MAAM,CAACP,IAAI,EAAE;EACtB;EACAS,OAAO,CAACC,GAAG,CAACJ,kBAAkB,CAAC,SAAS,CAAC,CAAC;EAE1C,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAG5B,QAAQ,CAAC;IAAC6B,cAAc,EAAE;EAAE,CAAC,CAAC;EAE5D,eAAeC,QAAQ,GAAG;IACxB,MAAMP,MAAM,GAAG,MAAMb,KAAK,CAAE,uCAAsC,CAAC;IACnE,OAAOa,MAAM;EACf;EAEA,oBACE;IAAK,SAAS,EAAC,yBAAyB;IAAA,wBAMtC;MAAI,SAAS,EAAC,KAAK;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkC,EACpDjB,OAAO,iBAAI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA6B,EACxCE,KAAK,iBAAI;MAAA,UAAO,+CAA8CA,KAAM;IAAC;MAAA;MAAA;MAAA;IAAA,QAAO,eAE7E;MAAQ,IAAI,EAAC,MAAM;MAAC,QAAQ,EAAGuB,CAAC,IAAKA,CAAE;MAAC,SAAS,EAAC,0BAA0B;MAAA,wBAC1E;QAAQ,KAAK,EAAC,EAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAqB,EACpC3B,IAAI,IAAIA,IAAI,CAAC4B,GAAG,CAAC;QAAA,IAAC;UAAER,IAAI;UAAES;QAAK,CAAC;QAAA,oBAAK;UAAA,UAAoBA;QAAI,GAAXT,IAAI;UAAA;UAAA;UAAA;QAAA,QAAiB;MAAA,EAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAClE,wBAET;MAAI,SAAS,EAAC,MAAM;MAAA,8BAAiBG,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QAChD;AAEV;AAAC,GA3DezB,OAAO;AAAA,KAAPA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module"}