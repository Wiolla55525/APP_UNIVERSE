{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\CodeAcademy\\\\Desktop\\\\My Projects\\\\cafe01-town-hall-new\\\\studentai\\\\violetaVinogrodska\\\\app-universe\\\\src\\\\Weather.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Weather(props) {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch(`/v1/places`).then(response => {\n      if (!response.ok) {\n        throw new Error(`This is an error: The status is ${response.status}`);\n      }\n      return response.json();\n    }).then(actualData => {\n      setData(actualData);\n      setError(null);\n    }).catch(err => {\n      setError(err.message);\n      setData(null);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n\n  //   const [serverUrl, setServerUrl] = useState('https://api.meteo.lt');\n  //   airTemperature, forecastTimeUtc\n  async function getLocationWeather(location) {\n    const result = await fetch(`v1/places/${location}/forecasts/long-term`);\n    return result.json();\n  }\n  console.log(getLocationWeather('vilnius'));\n  const [weather, setWeather] = useState('');\n  async function location() {\n    const result = await fetch(`v1/places/vilnius/forecasts/long-term`);\n    return result;\n  }\n  React.useEffect(() => {\n    const getWeather = async () => {\n      const result = await getLocationWeather(location);\n      data(result.success ? result.data : {});\n    };\n    getWeather();\n  }, [location]);\n  const {\n    temp,\n    description,\n    icon,\n    windTransform,\n    windSpeed\n  } = React.useMemo(() => {\n    const [weather] = data.airTemperature || [];\n    return {\n      temp: data.airTemperature.main && code.airTemperature.main.temp ? Math.round(code.airTemperature.main.temp).toString() : \"\"\n    };\n  }, [d.airTemperature]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" text-center p-2 m-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"p-3\",\n      children: \"Select city to check weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"A moment please...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: `There is a problem fetching the post data - ${error}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"city\",\n      onChange: e => e,\n      className: \"form-control text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), data && data.map(_ref => {\n        let {\n          code,\n          name\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          children: name\n        }, code, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"pt-4\",\n      children: [\"Temperature is \", weather, \" C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(Weather, \"ATIPHWg2MLSE1bJ8i71SScgXKOk=\");\n_c = Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","Weather","props","data","setData","loading","setLoading","error","setError","fetch","then","response","ok","Error","status","json","actualData","catch","err","message","finally","getLocationWeather","location","result","console","log","weather","setWeather","getWeather","success","temp","description","icon","windTransform","windSpeed","useMemo","airTemperature","main","code","Math","round","toString","d","e","map","name"],"sources":["C:/users/CodeAcademy/Desktop/My Projects/cafe01-town-hall-new/studentai/violetaVinogrodska/app-universe/src/Weather.jsx"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nexport function Weather(props) {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetch(`/v1/places`)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`This is an error: The status is ${response.status}`);\n        }\n        return response.json();\n      })\n      .then((actualData) => {\n        setData(actualData);\n        setError(null);\n      })\n      .catch((err) => {\n        setError(err.message);\n        setData(null);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  //   const [serverUrl, setServerUrl] = useState('https://api.meteo.lt');\n//   airTemperature, forecastTimeUtc\n  async function getLocationWeather(location) {\n    const result = await fetch(`v1/places/${location}/forecasts/long-term`);\n    return result.json();\n  }\n  console.log(getLocationWeather('vilnius'))\n    const [weather, setWeather] = useState('');\n\nasync function location() {\n    const result = await fetch(\n        `v1/places/vilnius/forecasts/long-term`,\n    )\n    return result;\n}\n\n    React.useEffect(() => {\n        const getWeather = async () => {\n          const result = await getLocationWeather(location);\n          data(result.success ? result.data : {});\n          \n        };\n      \n        getWeather();\n      }, [location]);\n\n      const { temp, description, icon, windTransform, windSpeed } = React.useMemo(() => {\n        const [weather] = data.airTemperature || [];\n        return {\n          temp: data.airTemperature.main && code.airTemperature.main.temp ? Math.round(code.airTemperature.main.temp).toString() : \"\",\n        };\n      }, [d.airTemperature]);\n\n\n\n  return (\n    <div className=\" text-center p-2 m-auto\">\n      {/* <h3>Weather:</h3>\n      <p>{weather}</p>\n      <button className=\"btn btn-dark\" onClick={() => setWeather()}>\n        Show current weather\n      </button> */}\n      <h3 className='p-3'>Select city to check weather</h3>\n      {loading && <div>A moment please...</div>}\n      {error && <div>{`There is a problem fetching the post data - ${error}`}</div>}\n    \n      <select name='city' onChange={(e) => (e)} className='form-control text-center'>\n        <option value=''>Select City</option>\n        {data &&\n          data.map(({ code, name }) => (\n            <option key={code}>\n              {name}\n            </option>\n          ))}\n      </select>\n\n      <h4 className='pt-4'>Temperature is { weather } C\n      </h4>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}