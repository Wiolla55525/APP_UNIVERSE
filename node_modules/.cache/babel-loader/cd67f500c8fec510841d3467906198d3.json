{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\CodeAcademy\\\\Desktop\\\\My Projects\\\\cafe01-town-hall-new\\\\studentai\\\\violetaVinogrodska\\\\app-universe\\\\src\\\\Weather.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Weather(props) {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch(`/v1/places`).then(response => {\n      if (!response.ok) {\n        throw new Error(`This is an error: The status is ${response.status}`);\n      }\n      return response.json();\n    }).then(actualData => {\n      setData(actualData);\n      setError(null);\n    }).catch(err => {\n      setError(err.message);\n      setData(null);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n\n  //   const [serverUrl, setServerUrl] = useState('https://api.meteo.lt');\n\n  const [weather, setWeather] = useState({\n    temp: ''\n  });\n  async function selectCity(e) {\n    setCity({\n      code: e.target.value,\n      name: e.target.name\n    });\n    console.log(city);\n    const getTemp = await fetch(`/v1/places/${e.target.value}/forecasts/long-term`);\n    const getTempJSON = await getTemp.json();\n    let date = new Date();\n    let apiPlaceholder = `${date.getFullYear()}-${date.getMonth() + 1}-0${date.getDate()} ${date.getHours()}:00:00`;\n    const forecast = getTempJSON.forecastTimestamps.find(f => f.forecastTimeUtc === `${apiPlaceholder}`);\n    setData({\n      temp: forecast.airTemperature,\n      hum: forecast.relativeHumidity,\n      ws: forecast.windSpeed\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" text-center p-2 m-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"p-3\",\n      children: \"Select city to check weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"A moment please...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: `There is a problem fetching the post data - ${error}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => selectCity(e),\n      name: \"city\",\n      className: \"form-control text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), data && data.map(_ref => {\n        let {\n          code,\n          name\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          children: name\n        }, code, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"pt-4\",\n      children: [\"Temperature is \", weather.temp, \" C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Weather, \"AeEA36i28Vf70zvJZXgCOp6Iv38=\");\n_c = Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","Weather","props","data","setData","loading","setLoading","error","setError","fetch","then","response","ok","Error","status","json","actualData","catch","err","message","finally","weather","setWeather","temp","selectCity","e","setCity","code","target","value","name","console","log","city","getTemp","getTempJSON","date","Date","apiPlaceholder","getFullYear","getMonth","getDate","getHours","forecast","forecastTimestamps","find","f","forecastTimeUtc","airTemperature","hum","relativeHumidity","ws","windSpeed","map"],"sources":["C:/users/CodeAcademy/Desktop/My Projects/cafe01-town-hall-new/studentai/violetaVinogrodska/app-universe/src/Weather.jsx"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nexport function Weather(props) {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetch(`/v1/places`)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`This is an error: The status is ${response.status}`);\n        }\n        return response.json();\n      })\n      .then((actualData) => {\n        setData(actualData);\n        setError(null);\n      })\n      .catch((err) => {\n        setError(err.message);\n        setData(null);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  //   const [serverUrl, setServerUrl] = useState('https://api.meteo.lt');\n\n    const [weather, setWeather] = useState({temp: ''});\n\n    async function selectCity(e) {\n        setCity({ code: e.target.value, name: e.target.name });\n        console.log(city)\n        const getTemp = await fetch(`/v1/places/${e.target.value}/forecasts/long-term`);\n        const getTempJSON = await getTemp.json();\n        let date = new Date();\n        let apiPlaceholder = `${date.getFullYear()}-${date.getMonth() + 1}-0${date.getDate()} ${date.getHours()}:00:00`;\n    \n        const forecast = getTempJSON.forecastTimestamps.find((f) => f.forecastTimeUtc === `${apiPlaceholder}`);\n        setData({temp: forecast.airTemperature, hum: forecast.relativeHumidity, ws: forecast.windSpeed});\n      }\n\n  return (\n    <div className=\" text-center p-2 m-auto\">\n      {/* <h3>Weather:</h3>\n      <p>{weather}</p>\n      <button className=\"btn btn-dark\" onClick={() => setWeather()}>\n        Show current weather\n      </button> */}\n      <h3 className='p-3'>Select city to check weather</h3>\n      {loading && <div>A moment please...</div>}\n      {error && <div>{`There is a problem fetching the post data - ${error}`}</div>}\n    \n      <select onChange={(e) => selectCity(e)} name='city' className='form-control text-center'>\n        <option value=''>Select City</option>\n        {data &&\n          data.map(({ code, name }) => (\n            <option key={code}>\n              {name}\n            </option>\n          ))}\n      </select>\n\n      <h4 className='pt-4'>Temperature is { weather.temp } C</h4>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AAAC;AAElC,OAAO,SAASC,OAAO,CAACC,KAAK,EAAE;EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdS,KAAK,CAAE,YAAW,CAAC,CAChBC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,mCAAkCF,QAAQ,CAACG,MAAO,EAAC,CAAC;MACvE;MACA,OAAOH,QAAQ,CAACI,IAAI,EAAE;IACxB,CAAC,CAAC,CACDL,IAAI,CAAEM,UAAU,IAAK;MACpBZ,OAAO,CAACY,UAAU,CAAC;MACnBR,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,CACDS,KAAK,CAAEC,GAAG,IAAK;MACdV,QAAQ,CAACU,GAAG,CAACC,OAAO,CAAC;MACrBf,OAAO,CAAC,IAAI,CAAC;IACf,CAAC,CAAC,CACDgB,OAAO,CAAC,MAAM;MACbd,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEE,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC;IAACwB,IAAI,EAAE;EAAE,CAAC,CAAC;EAElD,eAAeC,UAAU,CAACC,CAAC,EAAE;IACzBC,OAAO,CAAC;MAAEC,IAAI,EAAEF,CAAC,CAACG,MAAM,CAACC,KAAK;MAAEC,IAAI,EAAEL,CAAC,CAACG,MAAM,CAACE;IAAK,CAAC,CAAC;IACtDC,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;IACjB,MAAMC,OAAO,GAAG,MAAMzB,KAAK,CAAE,cAAagB,CAAC,CAACG,MAAM,CAACC,KAAM,sBAAqB,CAAC;IAC/E,MAAMM,WAAW,GAAG,MAAMD,OAAO,CAACnB,IAAI,EAAE;IACxC,IAAIqB,IAAI,GAAG,IAAIC,IAAI,EAAE;IACrB,IAAIC,cAAc,GAAI,GAAEF,IAAI,CAACG,WAAW,EAAG,IAAGH,IAAI,CAACI,QAAQ,EAAE,GAAG,CAAE,KAAIJ,IAAI,CAACK,OAAO,EAAG,IAAGL,IAAI,CAACM,QAAQ,EAAG,QAAO;IAE/G,MAAMC,QAAQ,GAAGR,WAAW,CAACS,kBAAkB,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,eAAe,KAAM,GAAET,cAAe,EAAC,CAAC;IACtGlC,OAAO,CAAC;MAACmB,IAAI,EAAEoB,QAAQ,CAACK,cAAc;MAAEC,GAAG,EAAEN,QAAQ,CAACO,gBAAgB;MAAEC,EAAE,EAAER,QAAQ,CAACS;IAAS,CAAC,CAAC;EAClG;EAEJ,oBACE;IAAK,SAAS,EAAC,yBAAyB;IAAA,wBAMtC;MAAI,SAAS,EAAC,KAAK;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkC,EACpD/C,OAAO,iBAAI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA6B,EACxCE,KAAK,iBAAI;MAAA,UAAO,+CAA8CA,KAAM;IAAC;MAAA;MAAA;MAAA;IAAA,QAAO,eAE7E;MAAQ,QAAQ,EAAGkB,CAAC,IAAKD,UAAU,CAACC,CAAC,CAAE;MAAC,IAAI,EAAC,MAAM;MAAC,SAAS,EAAC,0BAA0B;MAAA,wBACtF;QAAQ,KAAK,EAAC,EAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAqB,EACpCtB,IAAI,IACHA,IAAI,CAACkD,GAAG,CAAC;QAAA,IAAC;UAAE1B,IAAI;UAAEG;QAAK,CAAC;QAAA,oBACtB;UAAA,UACGA;QAAI,GADMH,IAAI;UAAA;UAAA;UAAA;QAAA,QAER;MAAA,CACV,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QACG,eAET;MAAI,SAAS,EAAC,MAAM;MAAA,8BAAkBN,OAAO,CAACE,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACvD;AAEV;AAAC,GAlEetB,OAAO;AAAA,KAAPA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module"}