{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CodeAcademy\\\\Desktop\\\\My Projects\\\\cafe01-town-hall-new\\\\studentai\\\\violetaVinogrodska\\\\app-universe\\\\src\\\\Weather.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useTemperature } from './Hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Weather() {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [weather, setWeather] = useState(null);\n  const [city, setCity] = useState('');\n  const temperature = useTemperature(ci);\n  useEffect(() => {\n    fetch(`/v1/places`).then(response => {\n      if (!response.ok) {\n        throw new Error(`This is an error: The status is ${response.status}`);\n      }\n      return response.json();\n    }).then(actualData => {\n      setData(actualData);\n    }).catch(err => {\n      setError(err.message);\n      setData(null);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" text-center p-2 m-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"p-3\",\n      children: \"Select city to check weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"A moment please...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: `There is a problem fetching the post data - ${error}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: city,\n      name: \"city\",\n      onChange: e => setCity(e.target.value),\n      className: \"form-control text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), data && data.map(_ref => {\n        let {\n          code,\n          name\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: code,\n          children: name\n        }, code, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"pt-4\",\n      children: [\"Temperature: \", JSON.stringify(weather), \" \\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n//\n_s(Weather, \"O+ryObcO9bevVqNvzUR1NTPAPq4=\", false, function () {\n  return [useTemperature];\n});\n_c = Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","useTemperature","Weather","data","setData","loading","setLoading","error","setError","weather","setWeather","city","setCity","temperature","ci","fetch","then","response","ok","Error","status","json","actualData","catch","err","message","finally","e","target","value","map","code","name","JSON","stringify"],"sources":["C:/Users/CodeAcademy/Desktop/My Projects/cafe01-town-hall-new/studentai/violetaVinogrodska/app-universe/src/Weather.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useTemperature } from './Hooks';\r\n\r\nexport function Weather() {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [weather, setWeather] = useState(null);\r\n  const [city, setCity] = useState('');\r\n  const temperature = useTemperature(ci)\r\n\r\n  useEffect(() => {\r\n    fetch(`/v1/places`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(`This is an error: The status is ${response.status}`);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((actualData) => {\r\n        setData(actualData);\r\n      })\r\n      .catch((err) => {\r\n        setError(err.message);\r\n        setData(null);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\" text-center p-2 m-auto\">\r\n      <h3 className=\"p-3\">Select city to check weather</h3>\r\n      {loading && <div>A moment please...</div>}\r\n      {error && <div>{`There is a problem fetching the post data - ${error}`}</div>}\r\n\r\n      <select value={city} name=\"city\" onChange={(e) => setCity(e.target.value)} className=\"form-control text-center\">\r\n        <option value=\"\">Select City</option>\r\n        {data &&\r\n          data.map(({ code, name }) => (\r\n            <option value={code} key={code}>\r\n              {name}\r\n            </option>\r\n          ))}\r\n      </select>\r\n\r\n      <h4 className=\"pt-4\">Temperature: {JSON.stringify(weather)} &deg;C</h4>\r\n    </div>\r\n  );\r\n}\r\n\r\n//\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,cAAc,QAAQ,SAAS;AAAC;AAEzC,OAAO,SAASC,OAAO,GAAG;EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMc,WAAW,GAAGZ,cAAc,CAACa,EAAE,CAAC;EAEtCd,SAAS,CAAC,MAAM;IACde,KAAK,CAAE,YAAW,CAAC,CAChBC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,mCAAkCF,QAAQ,CAACG,MAAO,EAAC,CAAC;MACvE;MACA,OAAOH,QAAQ,CAACI,IAAI,EAAE;IACxB,CAAC,CAAC,CACDL,IAAI,CAAEM,UAAU,IAAK;MACpBlB,OAAO,CAACkB,UAAU,CAAC;IACrB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;MACdhB,QAAQ,CAACgB,GAAG,CAACC,OAAO,CAAC;MACrBrB,OAAO,CAAC,IAAI,CAAC;IACf,CAAC,CAAC,CACDsB,OAAO,CAAC,MAAM;MACbpB,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAGN,oBACE;IAAK,SAAS,EAAC,yBAAyB;IAAA,wBACtC;MAAI,SAAS,EAAC,KAAK;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkC,EACpDD,OAAO,iBAAI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA6B,EACxCE,KAAK,iBAAI;MAAA,UAAO,+CAA8CA,KAAM;IAAC;MAAA;MAAA;MAAA;IAAA,QAAO,eAE7E;MAAQ,KAAK,EAAEI,IAAK;MAAC,IAAI,EAAC,MAAM;MAAC,QAAQ,EAAGgB,CAAC,IAAKf,OAAO,CAACe,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAAC,SAAS,EAAC,0BAA0B;MAAA,wBAC7G;QAAQ,KAAK,EAAC,EAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAqB,EACpC1B,IAAI,IACHA,IAAI,CAAC2B,GAAG,CAAC;QAAA,IAAC;UAAEC,IAAI;UAAEC;QAAK,CAAC;QAAA,oBACtB;UAAQ,KAAK,EAAED,IAAK;UAAA,UACjBC;QAAI,GADmBD,IAAI;UAAA;UAAA;UAAA;QAAA,QAErB;MAAA,CACV,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QACG,eAET;MAAI,SAAS,EAAC,MAAM;MAAA,4BAAeE,IAAI,CAACC,SAAS,CAACzB,OAAO,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAa;EAAA;IAAA;IAAA;IAAA;EAAA,QACnE;AAEV;;AAEA;AAAA,GAlDgBP,OAAO;EAAA,QAMDD,cAAc;AAAA;AAAA,KANpBC,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module"}