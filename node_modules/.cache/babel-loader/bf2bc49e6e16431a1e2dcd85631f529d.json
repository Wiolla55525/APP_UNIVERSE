{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\CodeAcademy\\\\Desktop\\\\My Projects\\\\cafe01-town-hall-new\\\\studentai\\\\violetaVinogrodska\\\\app-universe\\\\src\\\\ThemeContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/React.createContext();\nconst ThemeUpdateContext = /*#__PURE__*/React.createContext();\nexport function useTheme() {\n  _s();\n  return useContext(ThemeContext);\n}\n_s(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function useThemeUpdate() {\n  _s2();\n  return useContext(ThemeUpdateContext);\n}\n_s2(useThemeUpdate, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function ThemeProvider(_ref) {\n  _s3();\n  let {\n    children\n  } = _ref;\n  const [darkTheme, setDarkTheme] = useState(true);\n  function toggleTheme() {\n    setDarkTheme(prevDarkTheme => !prevDarkTheme);\n  }\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: darkTheme,\n    children: /*#__PURE__*/_jsxDEV(ThemeUpdateContext.Provider, {\n      value: toggleTheme,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s3(ThemeProvider, \"KvFZwusl0OlYXdklJc54+tNWP0k=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","useContext","useState","ThemeContext","createContext","ThemeUpdateContext","useTheme","useThemeUpdate","ThemeProvider","children","darkTheme","setDarkTheme","toggleTheme","prevDarkTheme"],"sources":["C:/users/CodeAcademy/Desktop/My Projects/cafe01-town-hall-new/studentai/violetaVinogrodska/app-universe/src/ThemeContext.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react';\n\nconst ThemeContext = React.createContext();\nconst ThemeUpdateContext = React.createContext();\n\nexport function useTheme() {\n  return useContext(ThemeContext);\n}\n\nexport function useThemeUpdate() {\n  return useContext(ThemeUpdateContext);\n}\n\nexport function ThemeProvider({ children }) {\n  const [darkTheme, setDarkTheme] = useState(true);\n\n  function toggleTheme() {\n    setDarkTheme((prevDarkTheme) => !prevDarkTheme);\n  }\n\n  return (\n    <ThemeContext.Provider value={darkTheme}>\n      <ThemeUpdateContext.Provider value={toggleTheme}>{children}</ThemeUpdateContext.Provider>\n    </ThemeContext.Provider>\n  );\n}\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAEpD,MAAMC,YAAY,gBAAGH,KAAK,CAACI,aAAa,EAAE;AAC1C,MAAMC,kBAAkB,gBAAGL,KAAK,CAACI,aAAa,EAAE;AAEhD,OAAO,SAASE,QAAQ,GAAG;EAAA;EACzB,OAAOL,UAAU,CAACE,YAAY,CAAC;AACjC;AAAC,GAFeG,QAAQ;AAIxB,OAAO,SAASC,cAAc,GAAG;EAAA;EAC/B,OAAON,UAAU,CAACI,kBAAkB,CAAC;AACvC;AAAC,IAFeE,cAAc;AAI9B,OAAO,SAASC,aAAa,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EACxC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEhD,SAASU,WAAW,GAAG;IACrBD,YAAY,CAAEE,aAAa,IAAK,CAACA,aAAa,CAAC;EACjD;EAEA,oBACE,QAAC,YAAY,CAAC,QAAQ;IAAC,KAAK,EAAEH,SAAU;IAAA,uBACtC,QAAC,kBAAkB,CAAC,QAAQ;MAAC,KAAK,EAAEE,WAAY;MAAA,UAAEH;IAAQ;MAAA;MAAA;MAAA;IAAA;EAA+B;IAAA;IAAA;IAAA;EAAA,QACnE;AAE5B;AAAC,IAZeD,aAAa;AAAA,KAAbA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module"}